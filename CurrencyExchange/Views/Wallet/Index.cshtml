@using Currency_exchange.Models
@model IEnumerable<UserWallet>
@{
    ViewData["Title"] = "Wallet";
}

<h2>Your Wallet</h2>
@if (Model == null || !Model.Any())
{
    <p>Your wallet is empty. Start by adding some currencies.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Currency</th>
                <th>Amount</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Currency.Code</td>
                    <td>@item.Amount</td>
                    <td>
                        <a asp-action="Exchange" asp-controller="Transaction" asp-route-fromCurrencyId="@item.CurrencyId" class="btn btn-sm btn-outline-primary">
                            Exchange
                        </a>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}


<h3>Add Currency to Wallet</h3>
<form asp-action="AddToWallet" method="post">
    <div class="mb-3">
        <label for="currency" class="form-label">Currency:</label>
        <select id="currency" name="currencyId" class="form-select" required>
            <option value="">-- Select Currency --</option>
            @foreach (var currency in ViewBag.Currencies)
            {
                <option value="@currency.Id">@currency.Code</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label for="amount" class="form-label">Amount:</label>
        <input type="number" id="amount" name="amount" class="form-control" step="0.01" required min="0.01" />
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }
    <button type="submit" class="btn btn-primary">Add</button>
</form>